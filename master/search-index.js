var searchIndex = JSON.parse('{\
"amiya":{"doc":"Amiya is a experimental middleware-based minimalism async…","i":[[4,"Method","amiya","HTTP request methods.",null,null],[13,"Get","","The GET method requests a representation of the specified…",0,null],[13,"Head","","The HEAD method asks for a response identical to that of a…",0,null],[13,"Post","","The POST method is used to submit an entity to the…",0,null],[13,"Put","","The PUT method replaces all current representations of the…",0,null],[13,"Delete","","The DELETE method deletes the specified resource.",0,null],[13,"Connect","","The CONNECT method establishes a tunnel to the server…",0,null],[13,"Options","","The OPTIONS method is used to describe the communication…",0,null],[13,"Trace","","The TRACE method performs a message loop-back test along…",0,null],[13,"Patch","","The PATCH method is used to apply partial modifications to…",0,null],[3,"Request","","An HTTP request.",null,null],[3,"Response","","An HTTP response.",null,null],[4,"StatusCode","","HTTP response status codes.",null,null],[13,"Continue","","100 Continue",1,null],[13,"SwitchingProtocols","","101 Switching Protocols",1,null],[13,"EarlyHints","","103 Early Hints",1,null],[13,"Ok","","200 Ok",1,null],[13,"Created","","201 Created",1,null],[13,"Accepted","","202 Accepted",1,null],[13,"NonAuthoritativeInformation","","203 Non Authoritative Information",1,null],[13,"NoContent","","204 No Content",1,null],[13,"ResetContent","","205 Reset Content",1,null],[13,"PartialContent","","206 Partial Content",1,null],[13,"MultiStatus","","207 Multi-Status",1,null],[13,"ImUsed","","226 Im Used",1,null],[13,"MultipleChoice","","300 Multiple Choice",1,null],[13,"MovedPermanently","","301 Moved Permanently",1,null],[13,"Found","","302 Found",1,null],[13,"SeeOther","","303 See Other",1,null],[13,"NotModified","","304 Not Modified",1,null],[13,"TemporaryRedirect","","307 Temporary Redirect",1,null],[13,"PermanentRedirect","","308 Permanent Redirect",1,null],[13,"BadRequest","","400 Bad Request",1,null],[13,"Unauthorized","","401 Unauthorized",1,null],[13,"PaymentRequired","","402 Payment Required",1,null],[13,"Forbidden","","403 Forbidden",1,null],[13,"NotFound","","404 Not Found The server can not find requested resource.…",1,null],[13,"MethodNotAllowed","","405 Method Not Allowed",1,null],[13,"NotAcceptable","","406 Not Acceptable",1,null],[13,"ProxyAuthenticationRequired","","407 Proxy Authentication Required",1,null],[13,"RequestTimeout","","408 Request Timeout",1,null],[13,"Conflict","","409 Conflict",1,null],[13,"Gone","","410 Gone",1,null],[13,"LengthRequired","","411 Length Required",1,null],[13,"PreconditionFailed","","412 Precondition Failed",1,null],[13,"PayloadTooLarge","","413 Payload Too Large",1,null],[13,"UriTooLong","","414 URI Too Long",1,null],[13,"UnsupportedMediaType","","415 Unsupported Media Type",1,null],[13,"RequestedRangeNotSatisfiable","","416 Requested Range Not Satisfiable",1,null],[13,"ExpectationFailed","","417 Expectation Failed",1,null],[13,"ImATeapot","","418 I\'m a teapot",1,null],[13,"MisdirectedRequest","","421 Misdirected Request",1,null],[13,"UnprocessableEntity","","422 Unprocessable Entity",1,null],[13,"Locked","","423 Locked",1,null],[13,"FailedDependency","","424 Failed Dependency",1,null],[13,"TooEarly","","425 Too Early",1,null],[13,"UpgradeRequired","","426 Upgrade Required",1,null],[13,"PreconditionRequired","","428 Precondition Required",1,null],[13,"TooManyRequests","","429 Too Many Requests",1,null],[13,"RequestHeaderFieldsTooLarge","","431 Request Header Fields Too Large",1,null],[13,"UnavailableForLegalReasons","","451 Unavailable For Legal Reasons",1,null],[13,"InternalServerError","","500 Internal Server Error",1,null],[13,"NotImplemented","","501 Not Implemented",1,null],[13,"BadGateway","","502 Bad Gateway",1,null],[13,"ServiceUnavailable","","503 Service Unavailable",1,null],[13,"GatewayTimeout","","504 Gateway Timeout",1,null],[13,"HttpVersionNotSupported","","505 HTTP Version Not Supported",1,null],[13,"VariantAlsoNegotiates","","506 Variant Also Negotiates",1,null],[13,"InsufficientStorage","","507 Insufficient Storage",1,null],[13,"LoopDetected","","508 Loop Detected",1,null],[13,"NotExtended","","510 Not Extended",1,null],[13,"NetworkAuthenticationRequired","","511 Network Authentication Required",1,null],[3,"Context","","The context a middleware will works on",null,null],[12,"req","","The incoming http request",2,null],[12,"resp","","The output http response, you can directly edit it",2,null],[12,"ex","","User defined extra data",2,null],[3,"Amiya","","Amiya App type.",null,null],[5,"new","","Create a [`Amiya`] instance",null,[[],["amiya",3]]],[11,"next","","Run all inner middleware, it drives the middleware system.",2,[[]]],[11,"path","","The path the next router can match.",2,[[]]],[0,"middleware","","Middleware system implement and built-in middleware…",null,null],[3,"MethodRouter","amiya::middleware","MethodRouter middleware for request diversion by HTTP method",null,null],[3,"Router","","Router middleware for request diversion",null,null],[3,"Custom","","A wrapper for middleware created by the `m` macro.",null,null],[12,"func","","the code in macro `m`, converted to a boxed async func",3,null],[5,"router","","Create new Router middleware, see [`Router`] for detail.",null,[[],["router",3]]],[11,"method","","Set given `middleware` as the handler of specific HTTP…",4,[[["middleware",8],["method",4]]]],[11,"methods","","Set given `middleware` as the handler of different HTTP…",4,[[["middleware",8],["asref",8]]]],[11,"get","","This method is auto generated, it\'s a proxy of…",4,[[["middleware",8]]]],[11,"head","","This method is auto generated, it\'s a proxy of…",4,[[["middleware",8]]]],[11,"post","","This method is auto generated, it\'s a proxy of…",4,[[["middleware",8]]]],[11,"put","","This method is auto generated, it\'s a proxy of…",4,[[["middleware",8]]]],[11,"delete","","This method is auto generated, it\'s a proxy of…",4,[[["middleware",8]]]],[11,"connect","","This method is auto generated, it\'s a proxy of…",4,[[["middleware",8]]]],[11,"options","","This method is auto generated, it\'s a proxy of…",4,[[["middleware",8]]]],[11,"trace","","This method is auto generated, it\'s a proxy of…",4,[[["middleware",8]]]],[11,"patch","","This method is auto generated, it\'s a proxy of…",4,[[["middleware",8]]]],[11,"all","","Set given `middleware` as the handler of all HTTP method,…",4,[[["middleware",8]]]],[11,"new","","Create new Router middleware",5,[[]]],[11,"endpoint","","Enter endpoint edit environment",5,[[],[["setendpoint",3],["routersetter",3]]]],[11,"at","","Enter endpoint edit environment for router table\'s `path`…",5,[[["into",8],["cow",4]],[["setendpoint",3],["routersetter",3],["routersetter",3]]]],[11,"fallback","","Enter fallback edit environment",5,[[],[["setfallback",3],["routersetter",3]]]],[8,"Middleware","","You can turn any type into a middleware by implement this…",null,null],[10,"handle","","You middleware\'s handler function, it will be called when…",6,[[["context",3]],[["box",3],["pin",3]]]],[6,"Result","amiya","The Result type all middleware should returns",null,null],[11,"new","","Create a [`Amiya`] instance",7,[[]]],[11,"uses","","Add a middleware to the end, you can create middleware by…",7,[[["middleware",8]]]],[11,"listen","","Start Amiya app on `addr`",7,[[["asynctosocketaddrs",8],["debug",8]]]],[14,"m","","Writer middleware easily.",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"into_iter","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"into_iter","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","amiya::middleware","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"into_iter","amiya","Returns a iterator of references over the remaining items.",8,[[]]],[11,"into_iter","","Returns a iterator of references over the remaining items.",9,[[]]],[11,"as_mut","","",8,[[],["headers",3]]],[11,"as_mut","","",9,[[],["headers",3]]],[11,"hash","","",0,[[]]],[11,"hash","","",1,[[]]],[11,"from_str","","",0,[[],[["method",4],["result",4]]]],[11,"try_from","","",1,[[],[["result",4],["statuscode",4]]]],[11,"try_from","","",0,[[],[["result",4],["method",4]]]],[11,"as_ref","","",9,[[],["headers",3]]],[11,"as_ref","","",0,[[]]],[11,"as_ref","","",8,[[],["headers",3]]],[11,"index","","Returns a reference to the value corresponding to the…",8,[[["headername",3]],["headervalues",3]]],[11,"index","","Returns a reference to the value corresponding to the…",9,[[],["headervalues",3]]],[11,"index","","Returns a reference to the value corresponding to the…",8,[[],["headervalues",3]]],[11,"index","","Returns a reference to the value corresponding to the…",9,[[["headername",3]],["headervalues",3]]],[11,"from","","",9,[[["statuscode",4]],["response",3]]],[11,"from","","",9,[[],["response",3]]],[11,"from","","",9,[[],["response",3]]],[11,"eq","","",0,[[["method",4]]]],[11,"eq","","",1,[[]]],[11,"eq","","",1,[[["statuscode",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",1,[[["formatter",3]],[["result",4],["error",3]]]],[11,"poll_fill_buf","","",8,[[["request",3],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"consume","","",8,[[["request",3],["pin",3]]]],[11,"poll_fill_buf","","",9,[[["context",3],["pin",3],["response",3]],[["poll",4],["result",4]]]],[11,"consume","","",9,[[["pin",3],["response",3]]]],[11,"poll_read","","",9,[[["context",3],["pin",3],["response",3]],[["poll",4],["result",4]]]],[11,"poll_read","","",8,[[["request",3],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"clone","","Clone the response, resolving the body to `Body::empty()`…",9,[[],["response",3]]],[11,"clone","","",0,[[],["method",4]]],[11,"clone","","",1,[[],["statuscode",4]]],[11,"clone","","Clone the request, resolving the body to `Body::empty()`…",8,[[],["request",3]]],[11,"fmt","","",8,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",9,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",1,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"handle","amiya::middleware","",4,[[["context",3]],[["box",3],["pin",3]]]],[11,"handle","","",5,[[["context",3]],[["pin",3],["box",3]]]],[11,"handle","","",3,[[["context",3]],[["pin",3],["box",3]]]],[11,"handle","amiya","",7,[[["context",3]],[["pin",3],["box",3]]]],[11,"default","amiya::middleware","",4,[[]]],[11,"default","","",5,[[]]],[11,"default","amiya","",7,[[]]],[11,"fmt","amiya::middleware","",4,[[["formatter",3]],["result",6]]],[11,"is_safe","amiya","Whether a method is considered \\\"safe\\\", meaning the request…",0,[[]]],[11,"new","","Create a new request.",8,[[["method",4]],["request",3]]],[11,"set_peer_addr","","Sets a string representation of the peer address of this…",8,[[["option",4]]]],[11,"set_local_addr","","Sets a string representation of the local address that…",8,[[["option",4]]]],[11,"peer_addr","","Get the peer socket address for the underlying transport,…",8,[[],["option",4]]],[11,"local_addr","","Get the local socket address for the underlying transport,…",8,[[],["option",4]]],[11,"remote","","Get the remote address for this request.",8,[[],["option",4]]],[11,"host","","Get the destination host for this request.",8,[[],["option",4]]],[11,"method","","Get the HTTP method",8,[[],["method",4]]],[11,"set_method","","Set the HTTP method.",8,[[["method",4]]]],[11,"url","","Get a reference to the url.",8,[[],["url",3]]],[11,"url_mut","","Get a mutable reference to the url.",8,[[],["url",3]]],[11,"set_body","","Set the request body.",8,[[]]],[11,"replace_body","","Swaps the value of the body with another body, without…",8,[[],["body",3]]],[11,"swap_body","","Replace the request body with a new body, and return the…",8,[[["body",3]]]],[11,"take_body","","Take the request body, replacing it with an empty body.",8,[[],["body",3]]],[11,"body_string","","Read the body as a string.",8,[[]]],[11,"body_bytes","","Read the body as bytes.",8,[[]]],[11,"body_json","","Read the body as JSON.",8,[[]]],[11,"body_form","","Read the body as `x-www-form-urlencoded`.",8,[[]]],[11,"header","","Get an HTTP header.",8,[[],[["headervalues",3],["option",4]]]],[11,"header_mut","","Get a mutable reference to a header.",8,[[],[["headervalues",3],["option",4]]]],[11,"remove_header","","Remove a header.",8,[[],[["headervalues",3],["option",4]]]],[11,"insert_header","","Set an HTTP header.",8,[[],[["headervalues",3],["option",4]]]],[11,"append_header","","Append a header to the headers.",8,[[]]],[11,"set_content_type","","Set the response MIME.",8,[[["mime",3]],[["headervalues",3],["option",4]]]],[11,"content_type","","Get the current content type",8,[[],[["option",4],["mime",3]]]],[11,"len","","Get the length of the body stream, if it has been set.",8,[[],["option",4]]],[11,"is_empty","","Returns `true` if the request has a set body stream length…",8,[[],["option",4]]],[11,"version","","Get the HTTP version, if one has been set.",8,[[],[["version",4],["option",4]]]],[11,"set_version","","Set the HTTP version.",8,[[["version",4],["option",4]]]],[11,"send_trailers","","Sends trailers to the a receiver.",8,[[],["sender",3]]],[11,"recv_trailers","","Receive trailers from a sender.",8,[[],["receiver",3]]],[11,"has_trailers","","Returns `true` if sending trailers is in progress.",8,[[]]],[11,"iter","","An iterator visiting all header pairs in arbitrary order.",8,[[],["iter",3]]],[11,"iter_mut","","An iterator visiting all header pairs in arbitrary order,…",8,[[],["itermut",3]]],[11,"header_names","","An iterator visiting all header names in arbitrary order.",8,[[],["names",3]]],[11,"header_values","","An iterator visiting all header values in arbitrary order.",8,[[],["values",3]]],[11,"ext","","Returns a reference to the existing local state.",8,[[],["extensions",3]]],[11,"ext_mut","","Returns a mutuable reference to the existing local state.",8,[[],["extensions",3]]],[11,"query","","Get the URL querystring.",8,[[],[["result",4],["error",3]]]],[11,"set_query","","Set the URL querystring.",8,[[],[["error",3],["result",4]]]],[11,"get","","Create a `GET` request.",8,[[],["request",3]]],[11,"head","","Create a `HEAD` request.",8,[[],["request",3]]],[11,"post","","Create a `POST` request.",8,[[],["request",3]]],[11,"put","","Create a `PUT` request.",8,[[],["request",3]]],[11,"delete","","Create a `DELETE` request.",8,[[],["request",3]]],[11,"connect","","Create a `CONNECT` request.",8,[[],["request",3]]],[11,"options","","Create a `OPTIONS` request.",8,[[],["request",3]]],[11,"trace","","Create a `TRACE` request.",8,[[],["request",3]]],[11,"patch","","Create a `PATCH` request.",8,[[],["request",3]]],[11,"new","","Create a new response.",9,[[],["response",3]]],[11,"status","","Get the status",9,[[],["statuscode",4]]],[11,"header_mut","","Get a mutable reference to a header.",9,[[],[["headervalues",3],["option",4]]]],[11,"header","","Get an HTTP header.",9,[[],[["headervalues",3],["option",4]]]],[11,"remove_header","","Remove a header.",9,[[],[["headervalues",3],["option",4]]]],[11,"insert_header","","Set an HTTP header.",9,[[],[["headervalues",3],["option",4]]]],[11,"append_header","","Append a header to the headers.",9,[[]]],[11,"set_body","","Set the body reader.",9,[[]]],[11,"replace_body","","Replace the response body with a new body, returning the…",9,[[],["body",3]]],[11,"swap_body","","Swaps the value of the body with another body, without…",9,[[["body",3]]]],[11,"take_body","","Take the response body, replacing it with an empty body.",9,[[],["body",3]]],[11,"body_string","","Read the body as a string.",9,[[]]],[11,"body_bytes","","Read the body as bytes.",9,[[]]],[11,"body_json","","Read the body as JSON.",9,[[]]],[11,"body_form","","Read the body as `x-www-form-urlencoded`.",9,[[]]],[11,"set_content_type","","Set the response MIME.",9,[[["mime",3]],[["headervalues",3],["option",4]]]],[11,"content_type","","Get the current content type",9,[[],[["option",4],["mime",3]]]],[11,"len","","Get the length of the body stream, if it has been set.",9,[[],["option",4]]],[11,"is_empty","","Returns `true` if the set length of the body stream is…",9,[[],["option",4]]],[11,"version","","Get the HTTP version, if one has been set.",9,[[],[["version",4],["option",4]]]],[11,"set_peer_addr","","Sets a string representation of the peer address that this…",9,[[["option",4]]]],[11,"set_local_addr","","Sets a string representation of the local address that…",9,[[["option",4]]]],[11,"peer_addr","","Get the peer socket address for the underlying transport,…",9,[[],["option",4]]],[11,"local_addr","","Get the local socket address for the underlying transport,…",9,[[],["option",4]]],[11,"set_version","","Set the HTTP version.",9,[[["version",4],["option",4]]]],[11,"set_status","","Set the status.",9,[[["statuscode",4]]]],[11,"send_trailers","","Sends trailers to the a receiver.",9,[[],["sender",3]]],[11,"recv_trailers","","Receive trailers from a sender.",9,[[],["receiver",3]]],[11,"has_trailers","","Returns `true` if sending trailers is in progress.",9,[[]]],[11,"iter","","An iterator visiting all header pairs in arbitrary order.",9,[[],["iter",3]]],[11,"iter_mut","","An iterator visiting all header pairs in arbitrary order,…",9,[[],["itermut",3]]],[11,"header_names","","An iterator visiting all header names in arbitrary order.",9,[[],["names",3]]],[11,"header_values","","An iterator visiting all header values in arbitrary order.",9,[[],["values",3]]],[11,"ext","","Returns a reference to the existing local.",9,[[],["extensions",3]]],[11,"ext_mut","","Returns a mutuable reference to the existing local state.",9,[[],["extensions",3]]],[11,"is_informational","","Returns `true` if the status code is `1xx` range.",1,[[]]],[11,"is_success","","Returns `true` if the status code is the `2xx` range.",1,[[]]],[11,"is_redirection","","Returns `true` if the status code is the `3xx` range.",1,[[]]],[11,"is_client_error","","Returns `true` if the status code is the `4xx` range.",1,[[]]],[11,"is_server_error","","Returns `true` if the status code is the `5xx` range.",1,[[]]],[11,"canonical_reason","","The canonical reason for a given status code",1,[[]]]],"p":[[4,"Method"],[4,"StatusCode"],[3,"Context"],[3,"Custom"],[3,"MethodRouter"],[3,"Router"],[8,"Middleware"],[3,"Amiya"],[3,"Request"],[3,"Response"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);